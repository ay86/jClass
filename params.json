{
  "name": "jClass",
  "tagline": "一个小巧的 JavaScript 方法类库",
  "body": "jClass\r\n=======================\r\n    一个小巧的javascript方法类库，并且提供部分动画交互效果。\r\n\r\n##Selector\r\n\r\n\tDOM选择器\r\n\t@param sExpression {String || Object} DOM对象或者表达式字符串，支持一般的类型查找\r\n\t@param oScopeDOM {Object} DOM对象，做为查找对象的父级元素\r\n\t@returns {Object} 返回一个查找结果集以及相关的方法\r\n\r\n使用方法与jQuery的基本一致，但只提供部分API。\r\n支持`tagName`, `className`, `name`, `id`, `attribute`, `string` 等方式选择或创建DOM对象。\r\n支持链式表达，暂不支持只对子级进行查找模式（`div > p`）*默认子孙级都查找*，查找`name`时请使用识别码`@`，比如：`@username`。\r\n\r\n- `each()` 遍历结果\r\n- `addClass()` 添加样式\r\n- `removeClass()` 删除样式\r\n- `hasClass()` 包含样式\r\n- `data()` DataSet\r\n- `attr()` 属性\r\n- `removeAttr()` 删除属性\r\n- `remove()` 移除元素\r\n- `after()` 在之后添加\r\n- `afterTo()` 添加到之后\r\n- `before()` 在之前添加\r\n- `beforeTo()` 添加到之前\r\n- `append()` 内部添加子元素\r\n- `appendTo()` 作为子元素添加到\r\n- `clone()` 克隆\r\n- `html()` 内部HTML\r\n- `outerHtml()` 外部HTML\r\n- `val()` 值\r\n- `eq()` 索引\r\n- `first()` 第一个\r\n- `last()` 最后一个\r\n- `prev()` 前一个\r\n- `next()` 下一个\r\n- `find()` 查找下级元素\r\n- `css()` CSS属性、设置\r\n- `width()` 宽度\r\n- `height()` 高度\r\n- `innerWidth()` 内部宽度\r\n- `innerHeight()` 内部高度\r\n- `alpha()` 透明度\r\n- `show()` 显示\r\n- `hide()` 隐藏\r\n\r\n---\r\n\r\n- `on()` 事件绑定\r\n- `fade()` 淡入淡出\r\n- `shake()` 震动\r\n- `animateShape()` 形状动画\r\n- `get()` 坐标值top, left, right, bottom\r\n- `serialize()` 序例化表单数据\r\n- `checkbox()` 选项框操作\r\n\r\n以上API的使用与jQuery的使用基本一致，支持链式操作。部分如`outerHtml()`; `alpha()`等是jClass自有的API。\r\n```js\r\nvar $ = jClass;\r\n$('#open').append($('div p.test').clone().attr('title', 'this is clone.'));\r\n```\r\n```js\r\n$('a').on('click', function(){\r\n\t$(this).shake(3); // 重复3次的默认偏移震动\r\n\treturn false;\r\n});\r\n```\r\n##Extend\r\n\r\n\t扩展方法\r\n\r\njClass提供扩展方法用于一些日常的效果实现\r\n\r\n- `load()` 页面内容加载完成\r\n- `domReady()` 页面结构加载完成\r\n- `addEvent()` 添加事件\r\n- `delEvent()` 移除事件\r\n- `isWho()` 浏览器检测\r\n- `colorToRgb()` RGB颜色值\r\n- `colorToHex()` 十六进制颜色值\r\n- `listMove()` 多选下拉项转换\r\n- `getHTML()` HTML文本内某节点的HTML\r\n- `cookie` Cookies\r\n- `stopBubble()` 阻止冒泡\r\n\r\n```js\r\n$.load(function(){\r\n\tif ($.isWho('ie')) {\r\n\t\t$.cookie.set('isIE', 'true', 30);\r\n\t}\r\n});\r\n```\r\n\r\n##Ajax\r\n\r\n\tAJAX请求\r\n\t@param jConfig {Object} 请求的参数配置\r\n\t@returns {XMLHttpRequest} 返回XHR对象\r\n\r\n方法执行后返回XHR对象，可将此对象赋值给变量后，执行`abort()`操作。\r\n本方法提供AJAX重发功能，可在触发`error`回调时执行`retry()`方法，重新执行AJAX请求，重试次数由配置`retryCount`指定，默认为3次。\r\n**注意本方法只提供`success`, `error`的回调，与jQuery支持的回调方法略有不同，并且不支持`$.get()`, `$.post()`等方法。**\r\n```js\r\nvar xhr = $.ajax({\r\n\turl: 'http://www.simple.com/simple.php',\r\n\ttype: 'POST',\r\n\tdataType: 'JSON',\r\n\tdata: {\r\n\t\tuser: 'Angus',\r\n\t\tage: 28,\r\n\t\tlist: [1, 2, 3, 4]\r\n\t},\r\n\tsuccess: function (jData, xhr){\r\n\t\t// success callback\r\n\t\t// this === jConfig\r\n\t},\r\n\terror: function (nStatus) {\r\n\t\t// error callback\r\n\t\t// this.retry();\r\n\t}\r\n});\r\n```",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}